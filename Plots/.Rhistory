df2<-ciTools::add_ci(df, as2mod_all, includeRanef = FALSE)
df2$Scale<-'2nd-Order'
df2$Study<-'Asotin Creek'
orig.mean<-0.30
orig.sd<-0.09
df2$MeanEst<-(df2$MeanEst2 * orig.sd) + orig.mean
as2$MeanEst<-(as2$MeanEst2 * orig.sd) + orig.mean
as2$Scale<-'2nd-Order'
as2$Study<-'Asotin Creek'
as3<-read.csv('D:/Dropbox/SheepWork/Analyses/Chapter1/Data/Spring_Summer/Selection-IFBF/QuadraticModel/PlotData/Asotin_PlotData_HomeRange.csv')
as3$Recruit<-as.factor(as3$Recruit)
# as2mod<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Asotin/Selection-IFBF/Asotin_Landscape_IFBF_Spring.RDS')
# as2mod_sum<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Asotin/Selection-IFBF/Asotin_Landscape_IFBF_Summer.RDS')
as3mod_all<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Asotin/Selection-IFBF/Asotin_HomeRange_IFBF-Lac_All.RDS')
as3<-subset(as3, Season == "Spring and Summer")
as3<-subset(as3, !is.na(Recruit))
# std<-function(x) {(x - mean(x, na.rm = T))/sd(x, na.rm = T)}
#
# sub<-std(as3$MeanEst)
# as3$MeanEst_std<-sub
#est<-seq(-6, 13.5, 0.05)
est<-seq(min(as3$MeanEst2, na.rm = T), max(as3$MeanEst2, na.rm = T), length.out = 200)
df<-data.frame(expand.grid(est, unique(as3$Recruit)))
names(df)<-c('MeanEst2', 'Recruit')
df3<-ciTools::add_ci(df, as3mod_all, includeRanef = FALSE)
df3$Scale<-'3rd-Order'
df3$Study<-'Asotin Creek'
orig.mean<-0.30
orig.sd<-0.09
df3$MeanEst<-(df3$MeanEst2 * orig.sd) + orig.mean
as3$MeanEst<-(as3$MeanEst2 * orig.sd) + orig.mean
as3$Scale<-'3rd-Order'
as3$Study<-'Asotin Creek'
asu<-read.csv('D:/Dropbox/SheepWork/Analyses/Chapter1/Data/Spring_Summer/Selection-IFBF/QuadraticModel/PlotData/Asotin_PlotData_Use.csv')
asu$Recruit<-as.factor(asu$Recruit)
# as2mod<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Asotin/Selection-IFBF/Asotin_Landscape_IFBF_Spring.RDS')
# as2mod_sum<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Asotin/Selection-IFBF/Asotin_Landscape_IFBF_Summer.RDS')
asumod_all<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Asotin/Selection-IFBF/Asotin_Use_IFBF-Lac_All.RDS')
asu<-subset(asu, Season == "Spring and Summer")
asu<-subset(asu, !is.na(Recruit))
#std<-function(x) {(x - mean(x, na.rm = T))/sd(x, na.rm = T)}
#sub<-std(asu$MeanUse)
#asu$MeanUse_std<-sub
est<-seq(min(asu$MeanEst2), max(asu$MeanEst2)+2.5, 0.01)
df<-data.frame(expand.grid(est, unique(asu$Recruit)))
names(df)<-c('MeanEst2', 'Recruit')
dfu<-ciTools::add_ci(df, asumod_all, includeRanef = FALSE)
dfu$Scale<-'Use'
dfu$Study<-'Asotin Creek'
names(dfu)[1]<-'MeanEst2'
orig.mean<-4.33
orig.sd<-1.67
dfu$MeanEst<-(dfu$MeanEst2 * orig.sd) + orig.mean
asu$MeanEst<-(asu$MeanEst * orig.sd) + orig.mean
asu$MeanEst<-exp(asu$MeanEst)
asu$Scale<-'Use'
asotin<-rbind(df2, df3, dfu)
asotin$Parameter<-'Autumn fat'
asotin$MeanEst<-ifelse(asotin$Scale == "Use", exp(asotin$MeanEst), asotin$MeanEst)
raw_asotin<-plyr::rbind.fill(as2, as3, asu)
raw_asotin$Study<-'Asotin Creek'
raw_asotin$Parameter<-'Autumn fat'
d2<-read.csv('D:/Dropbox/SheepWork/Analyses/Chapter1/Data/Spring_Summer/Selection-IFBF/QuadraticModel/PlotData/Dubois_PlotData_Landscape.csv')
# d2mod<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Spring.RDS')
# d2mod_sum<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Summer.RDS')
d2mod_all<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF-Lac_All.RDS')
d2mod_all2<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_ABS-Lac_All.RDS')
d2<-subset(d2, Season == "Spring and Summer")
# std<-function(x) {(x - mean(x, na.rm = T))/sd(x, na.rm = T)}
#
# sub<-std(d2$MeanEst)
# d2$MeanEst_std<-sub
#
# data<-data.frame(MeanEst = c(d2$MeanEst, d2$MeanEst), Value = c(d2$IFBF, d2$abschange), Recruit = c(d2$Recruit, d2$Recruit), SpringFat = c(d2$SpringFat, d2$SpringFat), Parameter = c(rep('IFBFat', nrow(d2)), rep('abschange', nrow(d2))))
# #data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn ingesta-free body fat', 'Percentage point change in ingesta-free body fat')
# data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn IFBFat', 'Percentage point change in IFBFat')
d2$Recruit<-as.factor(d2$Recruit)
#est<-seq(-3.6, 6.2, 0.05)
est<-seq(min(d2$MeanEst2, na.rm = T), max(d2$MeanEst2, na.rm = T), length.out = 200)
df<-data.frame(expand.grid(est, unique(d2$Recruit), mean(d2$SpringFat, na.rm = T)))
names(df)<-c('MeanEst2', 'Recruit', 'SpringFat')
df_ifbf<-ciTools::add_ci(df, d2mod_all, includeRanef = FALSE)
df_ifbf$Parameter<-'Autumn fat'
df_ppt<-ciTools::add_ci(df, d2mod_all2, includeRanef = FALSE)
df_ppt$Parameter<-'Percentage point change in fat'
df2<-rbind(df_ifbf, df_ppt)
df2$Scale<-'2nd-Order'
df2$Study<-'Whiskey Mountain'
orig.mean<-0.365
orig.sd<-0.134
df2$MeanEst<-(df2$MeanEst2* orig.sd) + orig.mean
d2$MeanEst<-(d2$MeanEst2 * orig.sd) + orig.mean
d2$Scale<-'2nd-Order'
d2$Study<-'Whiskey Mountain'
d3<-read.csv('D:/Dropbox/SheepWork/Analyses/Chapter1/Data/Spring_Summer/Selection-IFBF/QuadraticModel/PlotData/Dubois_PlotData_HomeRange.csv')
# d2mod<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Spring.RDS')
# d2mod_sum<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Summer.RDS')
d3mod_all<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_HomeRange_IFBF-Lac_All.RDS')
d3mod_all2<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_HomeRange_ABS-Lac_All.RDS')
d3<-subset(d3, Season == "Spring and Summer")
# std<-function(x) {(x - mean(x, na.rm = T))/sd(x, na.rm = T)}
#
# sub<-std(d3$MeanEst)
# d3$MeanEst_std<-sub
# data<-data.frame(MeanEst = c(d3$MeanEst, d3$MeanEst), Value = c(d3$IFBF, d3$abschange), Recruit = c(d3$Recruit, d3$Recruit), SpringFat = c(d3$SpringFat, d3$SpringFat), Parameter = c(rep('IFBFat', nrow(d3)), rep('abschange', nrow(d3))))
# #data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn ingesta-free body fat', 'Percent change in ingesta-free body fat')
# data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn IFBFat', 'Percentage point change in IFBFat')
d3$Recruit<-as.factor(d3$Recruit)
#est<-seq(-3.5, 6.1, 0.05)
est<-seq(min(d3$MeanEst2, na.rm = T), max(d3$MeanEst2, na.rm = T), length.out = 200)
df<-data.frame(expand.grid(est, unique(d3$Recruit), mean(d3$SpringFat, na.rm = T)))
names(df)<-c('MeanEst2', 'Recruit', 'SpringFat')
df_ifbf<-ciTools::add_ci(df, d3mod_all, includeRanef = FALSE)
df_ifbf$Parameter<-'Autumn fat'
df_ppt<-ciTools::add_ci(df, d3mod_all2, includeRanef = FALSE)
df_ppt$Parameter<-'Percentage point change in fat'
df3<-rbind(df_ifbf, df_ppt)
df3$Scale<-'3rd-Order'
df3$Study<-'Whiskey Mountain'
orig.mean<-0.365
orig.sd<-0.134
df3$MeanEst<-(df3$MeanEst2 * orig.sd) + orig.mean
d3$MeanEst<-(d3$MeanEst2 * orig.sd) + orig.mean
d3$Scale<-'3rd-Order'
d3$Study<-'Whiskey Mountain'
du<-read.csv('D:/Dropbox/SheepWork/Analyses/Chapter1/Data/Spring_Summer/Selection-IFBF/QuadraticModel/PlotData/Dubois_PlotData_Use.csv')
# d2mod<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Spring.RDS')
# d2mod_sum<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Summer.RDS')
dumod_all<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Use_IFBF-Lac_All.RDS')
dumod_all2<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Use_ABS-Lac_All.RDS')
du<-subset(du, Season == "Spring and Summer")
du<-subset(du, !is.na(Recruit))
# std<-function(x) {(x - mean(x, na.rm = T))/sd(x, na.rm = T)}
#
# sub<-std(du$MeanUse)
# du$MeanUse_std<-sub
# data<-data.frame(MeanUse = c(du$MeanUse, du$MeanUse), Value = c(du$IFBF, du$abschange), Recruit = c(du$Recruit, du$Recruit), SpringFat = c(du$SpringFat, du$SpringFat), Parameter = c(rep('IFBFat', nrow(du)), rep('abschange', nrow(du))))
# #data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn ingesta-free body fat', 'Percent change in ingesta-free body fat')
# data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn IFBFat', 'Percentage point change in IFBFat')
du$Recruit<-as.factor(du$Recruit)
est<-seq(min(du$MeanUse2, na.rm = T), max(du$MeanUse2, na.rm = T), length.out = 200)
#est<-seq(-1.5,20, 0.5)
df<-data.frame(expand.grid(est, unique(du$Recruit), mean(du$SpringFat, na.rm = T)))
names(df)<-c('MeanUse2', 'Recruit', 'SpringFat')
df_ifbf<-ciTools::add_ci(df, dumod_all, includeRanef = FALSE)
df_ifbf$Parameter<-'Autumn fat'
df_ppt<-ciTools::add_ci(df, dumod_all2, includeRanef = FALSE)
df_ppt$Parameter<-'Percentage point change in fat'
dfu<-rbind(df_ifbf, df_ppt)
dfu$Scale<-'Use'
dfu$Study<-'Whiskey Mountain'
names(dfu)[1]<-'MeanEst2'
orig.mean<-65.61
orig.sd<-96.88
dfu$MeanEst<-(dfu$MeanEst2 * orig.sd) + orig.mean
whiskey<-rbind(df2, df3, dfu)
whiskey<-whiskey[whiskey$Parameter == "Percentage point change in fat",]
du$MeanEst<-(du$MeanUse2* orig.sd) + orig.mean
#du$MeanEst<-exp(du$MeanEst)
du$Scale<-'Use'
raw_dubois<-plyr::rbind.fill(d2, d3, du)
raw_dubois$Study<-'Whiskey Mountain'
raw_dubois$Parameter<-'Percentage point change in fat'
head(raw_dubois)
tail(raw_dubois)
# Jackson
j2<-read.csv('D:/Dropbox/SheepWork/Analyses/Chapter1/Data/Spring_Summer/Selection-IFBF/QuadraticModel/PlotData/Jackson_PlotData_Landscape.csv')
# d2mod<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Spring.RDS')
# d2mod_sum<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Summer.RDS')
j2mod_all<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Jackson/Selection-IFBF/Jackson_Landscape_IFBF-Lac_All.RDS')
j2mod_all2<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Jackson/Selection-IFBF/Jackson_Landscape_ABS-Lac_All.RDS')
j2<-subset(j2, Season == "Spring and Summer")
j2<-j2[complete.cases(j2$Recruit),]
# std<-function(x) {(x - mean(x, na.rm = T))/sd(x, na.rm = T)}
#
# sub<-std(j2$MeanEst)
# j2$MeanEst_std<-sub
# data<-data.frame(MeanEst = c(j2$MeanEst, j2$MeanEst), Value = c(j2$IFBF, j2$abschange), Recruit = c(j2$Recruit, j2$Recruit), Parameter = c(rep('IFBFat', nrow(j2)), rep('percentchange', nrow(j2))))
# #data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn ingesta-free body fat', 'Percent change in ingesta-free body fat')
# data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn IFBFat', 'Percent change in IFBFat')
j2$Recruit<-as.factor(j2$Recruit)
#est<-seq(-5, 20, 0.05)
est<-seq(min(j2$MeanEst2, na.rm = T), max(j2$MeanEst2, na.rm = T), length.out = 200)
df<-data.frame(expand.grid(est, unique(j2$Recruit), mean(j2$SpringFat, na.rm = T)))
names(df)<-c('MeanEst2', 'Recruit', 'SpringFat')
df_ifbf<-ciTools::add_ci(df, j2mod_all, includeRanef = FALSE)
df_ifbf$Parameter<-'Autumn fat'
df_ppt<-ciTools::add_ci(df, j2mod_all2, includeRanef = FALSE)
df_ppt$Parameter<-'Percentage point change in fat'
df2<-rbind(df_ifbf, df_ppt)
df2$Scale<-'2nd-Order'
df2$Study<-'Jackson'
orig.mean<-0.358
orig.sd<-0.123
df2$MeanEst<-(df2$MeanEst2 * orig.sd) + orig.mean
d2$MeanEst<-(d2$MeanEst2 * orig.sd) + orig.mean
d2$Scale<-'2nd-Order'
d2$Study<-'Jackson'
j3<-read.csv('D:/Dropbox/SheepWork/Analyses/Chapter1/Data/Spring_Summer/Selection-IFBF/QuadraticModel/PlotData/Jackson_PlotData_HomeRange.csv')
# d2mod<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Spring.RDS')
# d2mod_sum<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Summer.RDS')
j3mod_all<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Jackson/Selection-IFBF/Jackson_HomeRange_IFBF-Lac_All.RDS')
j3mod_all2<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Jackson/Selection-IFBF/Jackson_HomeRange_ABS-Lac_All.RDS')
j3<-subset(j3, Season == "Spring and Summer")
j3<-j3[complete.cases(j3$Recruit),]
# std<-function(x) {(x - mean(x, na.rm = T))/sd(x, na.rm = T)}
#
# sub<-std(j3$MeanEst)
# j3$MeanEst_std<-sub
# data<-data.frame(MeanEst = c(j3$MeanEst, j3$MeanEst), Value = c(j3$IFBF, j3$percentchange), Recruit = c(j3$Recruit, j3$Recruit), Parameter = c(rep('IFBFat', nrow(j3)), rep('percentchange', nrow(j3))))
# #data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn ingesta-free body fat', 'Percent change in ingesta-free body fat')
# data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn IFBFat', 'Percent change in IFBFat')
j3$Recruit<-as.factor(j3$Recruit)
#est<-seq(-5, 20, 0.05)
est<-seq(min(j3$MeanEst2, na.rm = T), max(j3$MeanEst2, na.rm = T), length.out = 200)
df<-data.frame(expand.grid(est, unique(j3$Recruit), mean(j3$SpringFat, na.rm = T)))
names(df)<-c('MeanEst2', 'Recruit', 'SpringFat')
df_ifbf<-ciTools::add_ci(df, j3mod_all, includeRanef = FALSE)
df_ifbf$Parameter<-'Autumn fat'
df_ppt<-ciTools::add_ci(df, j3mod_all2, includeRanef = FALSE)
df_ppt$Parameter<-'Percentage point change in fat'
df3<-rbind(df_ifbf, df_ppt)
df3$Scale<-'3rd-Order'
df3$Study<-'Jackson'
orig.mean<-0.358
orig.sd<-0.123
df3$MeanEst<-(df3$MeanEst2 * orig.sd) + orig.mean
d3$MeanEst<-(d3$MeanEst2 * orig.sd) + orig.mean
d3$Scale<-'2nd-Order'
d3$Study<-'Jackson'
ju<-read.csv('D:/Dropbox/SheepWork/Analyses/Chapter1/Data/Spring_Summer/Selection-IFBF/QuadraticModel/PlotData/Jackson_PlotData_Use.csv')
# d2mod<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Spring.RDS')
# d2mod_sum<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Dubois/Selection-IFBF/Dubois_Landscape_IFBF_Summer.RDS')
jumod_all<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Jackson/Selection-IFBF/Jackson_Use_IFBF-Lac_All.RDS')
jumod_all2<-readRDS('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Jackson/Selection-IFBF/Jackson_Use_ABS-Lac_All.RDS')
ju<-subset(ju, Season == "Spring and Summer")
ju<-ju[complete.cases(ju$Recruit),]
# std<-function(x) {(x - mean(x, na.rm = T))/sd(x, na.rm = T)}
#
# sub<-std(ju$MeanUse)
# ju$MeanUse_std<-sub
# data<-data.frame(MeanUse = c(ju$MeanUse, ju$MeanUse), Value = c(ju$IFBF, ju$percentchange), Recruit = c(ju$Recruit, ju$Recruit), Parameter = c(rep('IFBFat', nrow(ju)), rep('percentchange', nrow(ju))))
# #data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn ingesta-free body fat', 'Percent change in ingesta-free body fat')
# data$Parameter<-ifelse(data$Parameter == "IFBFat", 'Autumn IFBFat', 'Percent change in IFBFat')
ju$Recruit<-as.factor(ju$Recruit)
#est<-seq(-4.5,20, 0.5)
est<-seq(min(ju$MeanUse2, na.rm = T), max(ju$MeanUse2, na.rm = T), length.out = 200)
df<-data.frame(expand.grid(est, unique(ju$Recruit), mean(ju$SpringFat, na.rm = T)))
names(df)<-c('MeanUse2', 'Recruit', 'SpringFat')
df_ifbf<-ciTools::add_ci(df, jumod_all, includeRanef = FALSE)
df_ifbf$Parameter<-'Autumn fat'
df_ppt<-ciTools::add_ci(df, jumod_all2, includeRanef = FALSE)
df_ppt$Parameter<-'Percentage point change in fat'
dfu<-rbind(df_ifbf, df_ppt)
dfu$Scale<-'Use'
dfu$Study<-'Jackson'
names(dfu)[1]<-'MeanEst2'
orig.mean<-177.02
orig.sd<-99.16
dfu$MeanEst<-(dfu$MeanEst2 * orig.sd) + orig.mean
jackson<-rbind(df2, df3, dfu)
jackson<-jackson[jackson$Parameter == "Percentage point change in fat",]
ju$MeanEst<-(ju$MeanUse2* orig.sd) + orig.mean
#ju$MeanEst<-exp(ju$MeanEst)
ju$Scale<-'Use'
raw_jackson<-plyr::rbind.fill(j2, j3, ju)
raw_jackson$Study<-'Jackson'
raw_jackson$Parameter<-'Percentage point change in fat'
head(raw_jackson
head(raw_jackson)
plotdat<-plyr::rbind.fill(asotin, whiskey, jackson)
sel<-plotdat[plotdat$Scale %in% c('2nd-Order', '3rd-Order'),]
sel<-sel[sel$MeanEst >= 0 & sel$MeanEst <= 1,]
use<-plotdat[plotdat$Scale %in% c('Use'),]
use<-use[use$MeanEst >= 0 & use$MeanEst <= 500,]
plotdat<-rbind(sel, use)
rawdat<-plyr::rbind.fill(raw_asotin, raw_dubois, raw_jackson)
rawdat$Scale<-ifelse(rawdat$Scale == "2nd Order", '2nd-Order', ifelse(rawdat$Scale == "3rd Order", '3rd-Order', 'Use'))
sel<-rawdat[rawdat$Scale %in% c('2nd-Order', '3rd-Order'),]
sel<-sel[sel$MeanEst >= 0 & sel$MeanEst <= 1,]
use<-rawdat[rawdat$Scale %in% c('Use'),]
use<-use[use$MeanEst >= 0 & use$MeanEst <= 500,]
rawdat<-rbind(sel, use)
rawdat$fat<-ifelse(rawdat$Study == "Asotin Creek", rawdat$IFBF, rawdat$abschange)
rawdat$Recruit<-ifelse(rawdat$Recruit == "0", "Unsuccessful", 'Successful')
# fake data to make axes match
df2<-data.frame(MeanEst = rep(seq(0, 1, 1), 2), pred = seq(0, 20, 20), Scale = rep(c('2nd-Order', '3rd-Order'),each = 2), Study = rep(c('Jackson', 'Whiskey Mountain'), 2), Parameter = 'Percentage point change in fat', Recruit = 'Unsuccessful')
plotdat$Recruit<-ifelse(plotdat$Recruit == "0", 'Unsuccessful', 'Successful')
ggplot(plotdat, aes(x = MeanEst, y = pred, color = Parameter, linetype = Recruit))+
facet_grid(Study ~ Scale, scales = "free")+
geom_line(size = 2.0)+
geom_ribbon(aes(ymin = LCB0.025, ymax = UCB0.975, fill = Parameter), alpha = 0.25)+
geom_point(data = df2, aes(x = MeanEst, y = pred), colour = "white")
ggplot(plotdat, aes(x = MeanEst, y = pred, color = Parameter, linetype = Recruit))+
facet_grid(Study ~ Scale, scales = "free")+
geom_line(size = 2.0)+
geom_ribbon(aes(ymin = LCB0.025, ymax = UCB0.975, fill = Parameter), alpha = 0.25)+
geom_point(data = df2, aes(x = MeanEst, y = pred), colour = "white")+
geom_point(data = rawdat, aes(x = MeanEst, y = fat, color = Parameter), alpha = 0.5, size = 3.5)
unique(rawdat$Scale)
rawdat<-plyr::rbind.fill(raw_asotin, raw_dubois, raw_jackson)
sel<-rawdat[rawdat$Scale %in% c('2nd-Order', '3rd-Order'),]
sel<-sel[sel$MeanEst >= 0 & sel$MeanEst <= 1,]
use<-rawdat[rawdat$Scale %in% c('Use'),]
use<-use[use$MeanEst >= 0 & use$MeanEst <= 500,]
rawdat<-rbind(sel, use)
rawdat$fat<-ifelse(rawdat$Study == "Asotin Creek", rawdat$IFBF, rawdat$abschange)
rawdat$Recruit<-ifelse(rawdat$Recruit == "0", "Unsuccessful", 'Successful')
library(ggh4x)
# fake data to make axes match
df2<-data.frame(MeanEst = rep(seq(0, 1, 1), 2), pred = seq(0, 20, 20), Scale = rep(c('2nd-Order', '3rd-Order'),each = 2), Study = rep(c('Jackson', 'Whiskey Mountain'), 2), Parameter = 'Percentage point change in fat', Recruit = 'Unsuccessful')
plotdat$Recruit<-ifelse(plotdat$Recruit == "0", 'Unsuccessful', 'Successful')
energy<-ggplot(plotdat, aes(x = MeanEst, y = pred, color = Parameter, linetype = Recruit))+
facet_grid(Study ~ Scale, scales = "free")+
geom_line(size = 2.0)+
geom_ribbon(aes(ymin = LCB0.025, ymax = UCB0.975, fill = Parameter), alpha = 0.25)+
geom_point(data = df2, aes(x = MeanEst, y = pred), colour = "white")+
geom_point(data = rawdat, aes(x = MeanEst, y = fat, color = Parameter), alpha = 0.5, size = 3.5)+
scale_color_manual(values = c('#44AA99', '#999933'))+
scale_fill_manual(values = c('#44AA99', '#999933'))+
scale_linetype_manual(values =  c('dotted', 'solid'))+
ylab('Individual performance metric')+
xlab('Relative strength of foodscape selection or use')+
theme_bw()+
#guides(fill = "none")+
guides(linetype = guide_legend(override.aes = list(fill = NA)))+
theme(strip.text = element_text(size = 36),
axis.title = element_text(size = 36),
axis.text = element_text(size = 34),
legend.position = 'top',
legend.justification = 'center',
legend.title = element_blank(),
legend.key = element_rect(fill = NA),
legend.background = element_blank(),
legend.box = "vertical",
legend.margin = margin(),
legend.key.width = unit(1.5, "cm"),
legend.text = element_text(size = 36),
panel.spacing = unit(1, "cm"))
energy
energy<-ggplot(plotdat, aes(x = MeanEst, y = pred, color = Parameter, linetype = Recruit))+
facet_grid(Study ~ Scale, scales = "free")+
geom_line(size = 2.0)+
geom_ribbon(aes(ymin = LCB0.025, ymax = UCB0.975, fill = Parameter), alpha = 0.25)+
geom_point(data = df2, aes(x = MeanEst, y = pred), colour = "white")+
geom_point(data = rawdat, aes(x = MeanEst, y = fat, color = Parameter), alpha = 0.5, size = 3.5)+
scale_color_manual(values = c('#44AA99', '#999933'))+
scale_fill_manual(values = c('#44AA99', '#999933'))+
scale_linetype_manual(values =  c('dotted', 'solid'))+
ylab('Individual performance metric')+
xlab('Relative strength of foodscape selection or use')+
theme_bw()+
#guides(fill = "none")+
guides(linetype = guide_legend(override.aes = list(fill = NA)))+
theme(strip.text = element_text(size = 36),
axis.title = element_text(size = 36),
axis.text = element_text(size = 34),
legend.position = 'top',
legend.justification = 'center',
legend.title = element_blank(),
legend.key = element_rect(fill = NA),
legend.background = element_blank(),
legend.box = "vertical",
legend.margin = margin(),
legend.key.width = unit(1.5, "cm"),
legend.text = element_text(size = 36),
panel.spacing = unit(1, "cm"))
energy
plotdat<-plyr::rbind.fill(asotin, whiskey, jackson)
sel<-plotdat[plotdat$Scale %in% c('2nd-Order', '3rd-Order'),]
sel<-sel[sel$MeanEst >= 0 & sel$MeanEst <= 1,]
use<-plotdat[plotdat$Scale %in% c('Use'),]
use<-use[use$MeanEst >= 0 & use$MeanEst <= 500,]
plotdat<-rbind(sel, use)
rawdat<-plyr::rbind.fill(raw_asotin, raw_dubois, raw_jackson)
#rawdat$Scale<-ifelse(rawdat$Scale == "2nd Order", '2nd-Order', ifelse(rawdat$Scale == "3rd Order", '3rd-Order', 'Use'))
sel<-rawdat[rawdat$Scale %in% c('2nd-Order', '3rd-Order'),]
sel<-sel[sel$MeanEst >= 0 & sel$MeanEst <= 1,]
use<-rawdat[rawdat$Scale %in% c('Use'),]
use<-use[use$MeanEst >= 0 & use$MeanEst <= 500,]
rawdat<-rbind(sel, use)
#plotdat<-plotdat[complete.cases(plotdat$Study),]
rawdat$fat<-ifelse(rawdat$Study == "Asotin Creek", rawdat$IFBF, rawdat$abschange)
rawdat$Recruit<-ifelse(rawdat$Recruit == "0", "Unsuccessful", 'Successful')
library(ggh4x)
# fake data to make axes match
df2<-data.frame(MeanEst = rep(seq(0, 1, 1), 2), pred = seq(0, 20, 20), Scale = rep(c('2nd-Order', '3rd-Order'),each = 2), Study = rep(c('Jackson', 'Whiskey Mountain'), 2), Parameter = 'Percentage point change in fat', Recruit = 'Unsuccessful')
plotdat$Recruit<-ifelse(plotdat$Recruit == "0", 'Unsuccessful', 'Successful')
energy<-ggplot(plotdat, aes(x = MeanEst, y = pred, color = Parameter, linetype = Recruit))+
facet_grid(Study ~ Scale, scales = "free")+
geom_line(size = 2.0)+
geom_ribbon(aes(ymin = LCB0.025, ymax = UCB0.975, fill = Parameter), alpha = 0.25)+
geom_point(data = df2, aes(x = MeanEst, y = pred), colour = "white")+
geom_point(data = rawdat, aes(x = MeanEst, y = fat, color = Parameter), alpha = 0.5, size = 3.5)+
scale_color_manual(values = c('#44AA99', '#999933'))+
scale_fill_manual(values = c('#44AA99', '#999933'))+
scale_linetype_manual(values =  c('dotted', 'solid'))+
ylab('Individual performance metric')+
xlab('Relative strength of foodscape selection or use')+
theme_bw()+
#guides(fill = "none")+
guides(linetype = guide_legend(override.aes = list(fill = NA)))+
theme(strip.text = element_text(size = 36),
axis.title = element_text(size = 36),
axis.text = element_text(size = 34),
legend.position = 'top',
legend.justification = 'center',
legend.title = element_blank(),
legend.key = element_rect(fill = NA),
legend.background = element_blank(),
legend.box = "vertical",
legend.margin = margin(),
legend.key.width = unit(1.5, "cm"),
legend.text = element_text(size = 36),
panel.spacing = unit(1, "cm"))
energy
ggsave('D:/Dropbox/SheepWork/Analyses/Chapter1/Results/Figures/Selection_IFBF-Significant.jpg', energy, dpi = 1200, width = 24, height = 20, units = "in")
require(dplyr)
require(readxl)
require(lubridate)
require(odbc)
require(RSQLite)
require(tidyr)
require(ggplot2)
require(cowplot)
require(survival)
require(sf)
## DESKTOP ##
sad<-read.csv('D:/Dropbox/PostDoc/Data/Capture/MasterDB/Intermediates/SAD.csv')
collar<-readxl::read_xlsx('D:/State of Idaho/Research Group-Lower Panther - Main Salmon Sheep Research - LPMS/Collars/LPMSCollarDeployment_250304.xlsx')
cap<-readxl::read_xlsx('D:/Dropbox/PostDoc/Data/Capture/MasterDB/Intermediates/LPMSSheepCapture_250311.xlsx')
ss<-readxl::read_xlsx('D:/State of Idaho/Research Group-Lower Panther - Main Salmon Sheep Research - LPMS/AdultSurvival/LPMS_studySheep_250304.xlsx')
dis<-readxl::read_xlsx('D:/Dropbox/PostDoc/Data/Capture/MasterDB/Intermediates/MoviQuery.xlsx', sheet = "Movi")
preg<-readxl::read_xlsx('D:/Dropbox/PostDoc/Data/Capture/MasterDB/Intermediates/MoviQuery.xlsx', sheet = "Preg")
mort<-readxl::read_xlsx('D:/Dropbox/PostDoc/Data/Mortalities/LPMS_Mortalities.xlsx')
gps<-read.csv('D:/Dropbox/PostDoc/Data/GPSData/LPMS_GPS.csv')
source('D:/Dropbox/PostDoc/Code/DBManagement/AnimalInfo_Table.R')
source('D:/Dropbox/PostDoc/Code/DBManagement/DiseaseTable.R')
source('D:/Dropbox/PostDoc/Code/DBManagement/CollarDeployment_Table.R')
source('D:/Dropbox/PostDoc/Code/DBManagement/Mortality_Table.R')
source('D:/Dropbox/PostDoc/Code/DBManagement/MoviHistory_Table.R')
source('D:/Dropbox/PostDoc/Code/DBManagement/FailSlip_Table.R')
# run once
#source('D:/Dropbox/PostDoc/Code/DBManagement/CollarInventory_Table.R')
dbpath = 'D:/Dropbox/PostDoc/Data/Capture/MasterDB/'
animalinfo(sad, collar, cap, ss, dbpath, export = T)
require(dplyr)
require(readxl)
require(lubridate)
require(odbc)
require(RSQLite)
require(tidyr)
require(ggplot2)
require(cowplot)
require(survival)
require(sf)
## DESKTOP ##
sad<-read.csv('D:/Dropbox/PostDoc/Data/Capture/MasterDB/Intermediates/SAD.csv')
collar<-readxl::read_xlsx('D:/State of Idaho/Research Group-Lower Panther - Main Salmon Sheep Research - LPMS/Collars/LPMSCollarDeployment_250304.xlsx')
cap<-readxl::read_xlsx('D:/Dropbox/PostDoc/Data/Capture/MasterDB/Intermediates/LPMSSheepCapture_250311.xlsx')
ss<-readxl::read_xlsx('D:/State of Idaho/Research Group-Lower Panther - Main Salmon Sheep Research - LPMS/AdultSurvival/LPMS_studySheep_250304.xlsx')
dis<-readxl::read_xlsx('D:/Dropbox/PostDoc/Data/Capture/MasterDB/Intermediates/MoviQuery.xlsx', sheet = "Movi")
preg<-readxl::read_xlsx('D:/Dropbox/PostDoc/Data/Capture/MasterDB/Intermediates/MoviQuery.xlsx', sheet = "Preg")
mort<-readxl::read_xlsx('D:/Dropbox/PostDoc/Data/Mortalities/LPMS_Mortalities.xlsx')
gps<-read.csv('D:/Dropbox/PostDoc/Data/GPSData/LPMS_GPS.csv')
source('D:/Dropbox/PostDoc/Code/DBManagement/AnimalInfo_Table.R')
source('D:/Dropbox/PostDoc/Code/DBManagement/DiseaseTable.R')
source('D:/Dropbox/PostDoc/Code/DBManagement/CollarDeployment_Table.R')
source('D:/Dropbox/PostDoc/Code/DBManagement/Mortality_Table.R')
source('D:/Dropbox/PostDoc/Code/DBManagement/MoviHistory_Table.R')
source('D:/Dropbox/PostDoc/Code/DBManagement/FailSlip_Table.R')
# run once
#source('D:/Dropbox/PostDoc/Code/DBManagement/CollarInventory_Table.R')
dbpath = 'D:/Dropbox/PostDoc/Data/Capture/MasterDB/'
animalinfo(sad, collar, cap, ss, dbpath, export = T)
failtable(sad, gps, mort,dbpath, export = T)
collartable(sad, dbpath, export = T)
diseasetable(dis, preg, dbpath, export_morts = F, export = T)
mortable(sad, dis, mort, dbpath, export = T)
movihistory(dis, preg, sad, collar, cap, gps, ss, yearstart = 2019, yearend = 2028, dbpath, export = T)
#collarinventory(sad, gps, dbpath)
source('D:/Dropbox/PostDoc/Code/DBManagement/PrevPlots.R')
acc_path = 'D:/Dropbox/PostDoc/Data/Capture/MasterDB/'
savewd = 'C:/Users/Katey/OneDrive - State of Idaho/Documents/GitHub/LPMS-BHS/Plots/'
prev<-prevplots(acc_path, savewd = savewd, collar = collar, return_summary = T)
## adult survival
source('D:/Dropbox/PostDoc/Code/DBManagement/AdultSurvival.R')
yearstart = 2020
yearend = 2024
adultsurvival(acc_path, yearstart, yearend, savewd)
library(ggsurv)
??ggsurvplot
library(survminer)
source('D:/Dropbox/PostDoc/Code/DBManagement/PrevPlots.R')
acc_path = 'D:/Dropbox/PostDoc/Data/Capture/MasterDB/'
savewd = 'C:/Users/Katey/OneDrive - State of Idaho/Documents/GitHub/LPMS-BHS/Plots/'
prev<-prevplots(acc_path, savewd = savewd, collar = collar, return_summary = T)
## adult survival
source('D:/Dropbox/PostDoc/Code/DBManagement/AdultSurvival.R')
yearstart = 2020
yearend = 2024
adultsurvival(acc_path, yearstart, yearend, savewd)
58.97/2
180.72+53.2
233.92/2
240*100
29.48*24000
707520/120
116.96*24000
2807040/120
29.48*12000
353760/120
